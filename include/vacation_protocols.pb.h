// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: vacation_protocols.proto
// Protobuf C++ Version: 5.27.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_vacation_5fprotocols_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_vacation_5fprotocols_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_vacation_5fprotocols_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_vacation_5fprotocols_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_vacation_5fprotocols_2eproto;
class Employee;
struct EmployeeDefaultTypeInternal;
extern EmployeeDefaultTypeInternal _Employee_default_instance_;
class GetAllEmployeersRequest;
struct GetAllEmployeersRequestDefaultTypeInternal;
extern GetAllEmployeersRequestDefaultTypeInternal _GetAllEmployeersRequest_default_instance_;
class GetAllEmployeersResponse;
struct GetAllEmployeersResponseDefaultTypeInternal;
extern GetAllEmployeersResponseDefaultTypeInternal _GetAllEmployeersResponse_default_instance_;
class GetVacationsByEmployeeRequest;
struct GetVacationsByEmployeeRequestDefaultTypeInternal;
extern GetVacationsByEmployeeRequestDefaultTypeInternal _GetVacationsByEmployeeRequest_default_instance_;
class GetVacationsByEmployeeResponse;
struct GetVacationsByEmployeeResponseDefaultTypeInternal;
extern GetVacationsByEmployeeResponseDefaultTypeInternal _GetVacationsByEmployeeResponse_default_instance_;
class Vacation;
struct VacationDefaultTypeInternal;
extern VacationDefaultTypeInternal _Vacation_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class Vacation final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Vacation) */ {
 public:
  inline Vacation() : Vacation(nullptr) {}
  ~Vacation() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Vacation(
      ::google::protobuf::internal::ConstantInitialized);

  inline Vacation(const Vacation& from) : Vacation(nullptr, from) {}
  inline Vacation(Vacation&& from) noexcept
      : Vacation(nullptr, std::move(from)) {}
  inline Vacation& operator=(const Vacation& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vacation& operator=(Vacation&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Vacation& default_instance() {
    return *internal_default_instance();
  }
  static inline const Vacation* internal_default_instance() {
    return reinterpret_cast<const Vacation*>(
        &_Vacation_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Vacation& a, Vacation& b) { a.Swap(&b); }
  inline void Swap(Vacation* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vacation* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Vacation* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Vacation>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Vacation& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Vacation& from) { Vacation::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Vacation* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "Vacation"; }

 protected:
  explicit Vacation(::google::protobuf::Arena* arena);
  Vacation(::google::protobuf::Arena* arena, const Vacation& from);
  Vacation(::google::protobuf::Arena* arena, Vacation&& from) noexcept
      : Vacation(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStartDateFieldNumber = 3,
    kEndDateFieldNumber = 4,
    kIdFieldNumber = 1,
    kEmpIdFieldNumber = 2,
    kDaysCountFieldNumber = 5,
  };
  // string startDate = 3;
  void clear_startdate() ;
  const std::string& startdate() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_startdate(Arg_&& arg, Args_... args);
  std::string* mutable_startdate();
  PROTOBUF_NODISCARD std::string* release_startdate();
  void set_allocated_startdate(std::string* value);

  private:
  const std::string& _internal_startdate() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_startdate(
      const std::string& value);
  std::string* _internal_mutable_startdate();

  public:
  // string endDate = 4;
  void clear_enddate() ;
  const std::string& enddate() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_enddate(Arg_&& arg, Args_... args);
  std::string* mutable_enddate();
  PROTOBUF_NODISCARD std::string* release_enddate();
  void set_allocated_enddate(std::string* value);

  private:
  const std::string& _internal_enddate() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_enddate(
      const std::string& value);
  std::string* _internal_mutable_enddate();

  public:
  // int32 id = 1;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // int32 empId = 2;
  void clear_empid() ;
  ::int32_t empid() const;
  void set_empid(::int32_t value);

  private:
  ::int32_t _internal_empid() const;
  void _internal_set_empid(::int32_t value);

  public:
  // int32 daysCount = 5;
  void clear_dayscount() ;
  ::int32_t dayscount() const;
  void set_dayscount(::int32_t value);

  private:
  ::int32_t _internal_dayscount() const;
  void _internal_set_dayscount(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Vacation)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      33, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Vacation_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Vacation& from_msg);
    ::google::protobuf::internal::ArenaStringPtr startdate_;
    ::google::protobuf::internal::ArenaStringPtr enddate_;
    ::int32_t id_;
    ::int32_t empid_;
    ::int32_t dayscount_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_vacation_5fprotocols_2eproto;
};
// -------------------------------------------------------------------

class GetVacationsByEmployeeRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:GetVacationsByEmployeeRequest) */ {
 public:
  inline GetVacationsByEmployeeRequest() : GetVacationsByEmployeeRequest(nullptr) {}
  ~GetVacationsByEmployeeRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetVacationsByEmployeeRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetVacationsByEmployeeRequest(const GetVacationsByEmployeeRequest& from) : GetVacationsByEmployeeRequest(nullptr, from) {}
  inline GetVacationsByEmployeeRequest(GetVacationsByEmployeeRequest&& from) noexcept
      : GetVacationsByEmployeeRequest(nullptr, std::move(from)) {}
  inline GetVacationsByEmployeeRequest& operator=(const GetVacationsByEmployeeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetVacationsByEmployeeRequest& operator=(GetVacationsByEmployeeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetVacationsByEmployeeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetVacationsByEmployeeRequest* internal_default_instance() {
    return reinterpret_cast<const GetVacationsByEmployeeRequest*>(
        &_GetVacationsByEmployeeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(GetVacationsByEmployeeRequest& a, GetVacationsByEmployeeRequest& b) { a.Swap(&b); }
  inline void Swap(GetVacationsByEmployeeRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetVacationsByEmployeeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetVacationsByEmployeeRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GetVacationsByEmployeeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetVacationsByEmployeeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetVacationsByEmployeeRequest& from) { GetVacationsByEmployeeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetVacationsByEmployeeRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "GetVacationsByEmployeeRequest"; }

 protected:
  explicit GetVacationsByEmployeeRequest(::google::protobuf::Arena* arena);
  GetVacationsByEmployeeRequest(::google::protobuf::Arena* arena, const GetVacationsByEmployeeRequest& from);
  GetVacationsByEmployeeRequest(::google::protobuf::Arena* arena, GetVacationsByEmployeeRequest&& from) noexcept
      : GetVacationsByEmployeeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEmpIdFieldNumber = 1,
  };
  // int32 empId = 1;
  void clear_empid() ;
  ::int32_t empid() const;
  void set_empid(::int32_t value);

  private:
  ::int32_t _internal_empid() const;
  void _internal_set_empid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:GetVacationsByEmployeeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetVacationsByEmployeeRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetVacationsByEmployeeRequest& from_msg);
    ::int32_t empid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_vacation_5fprotocols_2eproto;
};
// -------------------------------------------------------------------

class GetAllEmployeersRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:GetAllEmployeersRequest) */ {
 public:
  inline GetAllEmployeersRequest() : GetAllEmployeersRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetAllEmployeersRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetAllEmployeersRequest(const GetAllEmployeersRequest& from) : GetAllEmployeersRequest(nullptr, from) {}
  inline GetAllEmployeersRequest(GetAllEmployeersRequest&& from) noexcept
      : GetAllEmployeersRequest(nullptr, std::move(from)) {}
  inline GetAllEmployeersRequest& operator=(const GetAllEmployeersRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetAllEmployeersRequest& operator=(GetAllEmployeersRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetAllEmployeersRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetAllEmployeersRequest* internal_default_instance() {
    return reinterpret_cast<const GetAllEmployeersRequest*>(
        &_GetAllEmployeersRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(GetAllEmployeersRequest& a, GetAllEmployeersRequest& b) { a.Swap(&b); }
  inline void Swap(GetAllEmployeersRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetAllEmployeersRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetAllEmployeersRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<GetAllEmployeersRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetAllEmployeersRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetAllEmployeersRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "GetAllEmployeersRequest"; }

 protected:
  explicit GetAllEmployeersRequest(::google::protobuf::Arena* arena);
  GetAllEmployeersRequest(::google::protobuf::Arena* arena, const GetAllEmployeersRequest& from);
  GetAllEmployeersRequest(::google::protobuf::Arena* arena, GetAllEmployeersRequest&& from) noexcept
      : GetAllEmployeersRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:GetAllEmployeersRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetAllEmployeersRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetAllEmployeersRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_vacation_5fprotocols_2eproto;
};
// -------------------------------------------------------------------

class GetVacationsByEmployeeResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:GetVacationsByEmployeeResponse) */ {
 public:
  inline GetVacationsByEmployeeResponse() : GetVacationsByEmployeeResponse(nullptr) {}
  ~GetVacationsByEmployeeResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetVacationsByEmployeeResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetVacationsByEmployeeResponse(const GetVacationsByEmployeeResponse& from) : GetVacationsByEmployeeResponse(nullptr, from) {}
  inline GetVacationsByEmployeeResponse(GetVacationsByEmployeeResponse&& from) noexcept
      : GetVacationsByEmployeeResponse(nullptr, std::move(from)) {}
  inline GetVacationsByEmployeeResponse& operator=(const GetVacationsByEmployeeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetVacationsByEmployeeResponse& operator=(GetVacationsByEmployeeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetVacationsByEmployeeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetVacationsByEmployeeResponse* internal_default_instance() {
    return reinterpret_cast<const GetVacationsByEmployeeResponse*>(
        &_GetVacationsByEmployeeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(GetVacationsByEmployeeResponse& a, GetVacationsByEmployeeResponse& b) { a.Swap(&b); }
  inline void Swap(GetVacationsByEmployeeResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetVacationsByEmployeeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetVacationsByEmployeeResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GetVacationsByEmployeeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetVacationsByEmployeeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetVacationsByEmployeeResponse& from) { GetVacationsByEmployeeResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetVacationsByEmployeeResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "GetVacationsByEmployeeResponse"; }

 protected:
  explicit GetVacationsByEmployeeResponse(::google::protobuf::Arena* arena);
  GetVacationsByEmployeeResponse(::google::protobuf::Arena* arena, const GetVacationsByEmployeeResponse& from);
  GetVacationsByEmployeeResponse(::google::protobuf::Arena* arena, GetVacationsByEmployeeResponse&& from) noexcept
      : GetVacationsByEmployeeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kVacationsFieldNumber = 1,
  };
  // repeated .Vacation vacations = 1;
  int vacations_size() const;
  private:
  int _internal_vacations_size() const;

  public:
  void clear_vacations() ;
  ::Vacation* mutable_vacations(int index);
  ::google::protobuf::RepeatedPtrField<::Vacation>* mutable_vacations();

  private:
  const ::google::protobuf::RepeatedPtrField<::Vacation>& _internal_vacations() const;
  ::google::protobuf::RepeatedPtrField<::Vacation>* _internal_mutable_vacations();
  public:
  const ::Vacation& vacations(int index) const;
  ::Vacation* add_vacations();
  const ::google::protobuf::RepeatedPtrField<::Vacation>& vacations() const;
  // @@protoc_insertion_point(class_scope:GetVacationsByEmployeeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetVacationsByEmployeeResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetVacationsByEmployeeResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::Vacation > vacations_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_vacation_5fprotocols_2eproto;
};
// -------------------------------------------------------------------

class Employee final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Employee) */ {
 public:
  inline Employee() : Employee(nullptr) {}
  ~Employee() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Employee(
      ::google::protobuf::internal::ConstantInitialized);

  inline Employee(const Employee& from) : Employee(nullptr, from) {}
  inline Employee(Employee&& from) noexcept
      : Employee(nullptr, std::move(from)) {}
  inline Employee& operator=(const Employee& from) {
    CopyFrom(from);
    return *this;
  }
  inline Employee& operator=(Employee&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Employee& default_instance() {
    return *internal_default_instance();
  }
  static inline const Employee* internal_default_instance() {
    return reinterpret_cast<const Employee*>(
        &_Employee_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Employee& a, Employee& b) { a.Swap(&b); }
  inline void Swap(Employee* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Employee* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Employee* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Employee>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Employee& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Employee& from) { Employee::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Employee* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "Employee"; }

 protected:
  explicit Employee(::google::protobuf::Arena* arena);
  Employee(::google::protobuf::Arena* arena, const Employee& from);
  Employee(::google::protobuf::Arena* arena, Employee&& from) noexcept
      : Employee(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kVacationsFieldNumber = 5,
    kFirstNameFieldNumber = 2,
    kLastNameFieldNumber = 3,
    kPatronymicFieldNumber = 4,
    kIdFieldNumber = 1,
  };
  // repeated .Vacation vacations = 5;
  int vacations_size() const;
  private:
  int _internal_vacations_size() const;

  public:
  void clear_vacations() ;
  ::Vacation* mutable_vacations(int index);
  ::google::protobuf::RepeatedPtrField<::Vacation>* mutable_vacations();

  private:
  const ::google::protobuf::RepeatedPtrField<::Vacation>& _internal_vacations() const;
  ::google::protobuf::RepeatedPtrField<::Vacation>* _internal_mutable_vacations();
  public:
  const ::Vacation& vacations(int index) const;
  ::Vacation* add_vacations();
  const ::google::protobuf::RepeatedPtrField<::Vacation>& vacations() const;
  // string firstName = 2;
  void clear_firstname() ;
  const std::string& firstname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_firstname(Arg_&& arg, Args_... args);
  std::string* mutable_firstname();
  PROTOBUF_NODISCARD std::string* release_firstname();
  void set_allocated_firstname(std::string* value);

  private:
  const std::string& _internal_firstname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_firstname(
      const std::string& value);
  std::string* _internal_mutable_firstname();

  public:
  // string lastName = 3;
  void clear_lastname() ;
  const std::string& lastname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lastname(Arg_&& arg, Args_... args);
  std::string* mutable_lastname();
  PROTOBUF_NODISCARD std::string* release_lastname();
  void set_allocated_lastname(std::string* value);

  private:
  const std::string& _internal_lastname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_lastname(
      const std::string& value);
  std::string* _internal_mutable_lastname();

  public:
  // string patronymic = 4;
  void clear_patronymic() ;
  const std::string& patronymic() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_patronymic(Arg_&& arg, Args_... args);
  std::string* mutable_patronymic();
  PROTOBUF_NODISCARD std::string* release_patronymic();
  void set_allocated_patronymic(std::string* value);

  private:
  const std::string& _internal_patronymic() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_patronymic(
      const std::string& value);
  std::string* _internal_mutable_patronymic();

  public:
  // int32 id = 1;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Employee)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      44, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Employee_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Employee& from_msg);
    ::google::protobuf::RepeatedPtrField< ::Vacation > vacations_;
    ::google::protobuf::internal::ArenaStringPtr firstname_;
    ::google::protobuf::internal::ArenaStringPtr lastname_;
    ::google::protobuf::internal::ArenaStringPtr patronymic_;
    ::int32_t id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_vacation_5fprotocols_2eproto;
};
// -------------------------------------------------------------------

class GetAllEmployeersResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:GetAllEmployeersResponse) */ {
 public:
  inline GetAllEmployeersResponse() : GetAllEmployeersResponse(nullptr) {}
  ~GetAllEmployeersResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetAllEmployeersResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetAllEmployeersResponse(const GetAllEmployeersResponse& from) : GetAllEmployeersResponse(nullptr, from) {}
  inline GetAllEmployeersResponse(GetAllEmployeersResponse&& from) noexcept
      : GetAllEmployeersResponse(nullptr, std::move(from)) {}
  inline GetAllEmployeersResponse& operator=(const GetAllEmployeersResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetAllEmployeersResponse& operator=(GetAllEmployeersResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetAllEmployeersResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetAllEmployeersResponse* internal_default_instance() {
    return reinterpret_cast<const GetAllEmployeersResponse*>(
        &_GetAllEmployeersResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(GetAllEmployeersResponse& a, GetAllEmployeersResponse& b) { a.Swap(&b); }
  inline void Swap(GetAllEmployeersResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetAllEmployeersResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetAllEmployeersResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GetAllEmployeersResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetAllEmployeersResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetAllEmployeersResponse& from) { GetAllEmployeersResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetAllEmployeersResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "GetAllEmployeersResponse"; }

 protected:
  explicit GetAllEmployeersResponse(::google::protobuf::Arena* arena);
  GetAllEmployeersResponse(::google::protobuf::Arena* arena, const GetAllEmployeersResponse& from);
  GetAllEmployeersResponse(::google::protobuf::Arena* arena, GetAllEmployeersResponse&& from) noexcept
      : GetAllEmployeersResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEmployeesFieldNumber = 1,
  };
  // repeated .Employee employees = 1;
  int employees_size() const;
  private:
  int _internal_employees_size() const;

  public:
  void clear_employees() ;
  ::Employee* mutable_employees(int index);
  ::google::protobuf::RepeatedPtrField<::Employee>* mutable_employees();

  private:
  const ::google::protobuf::RepeatedPtrField<::Employee>& _internal_employees() const;
  ::google::protobuf::RepeatedPtrField<::Employee>* _internal_mutable_employees();
  public:
  const ::Employee& employees(int index) const;
  ::Employee* add_employees();
  const ::google::protobuf::RepeatedPtrField<::Employee>& employees() const;
  // @@protoc_insertion_point(class_scope:GetAllEmployeersResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetAllEmployeersResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetAllEmployeersResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::Employee > employees_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_vacation_5fprotocols_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Vacation

// int32 id = 1;
inline void Vacation::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0;
}
inline ::int32_t Vacation::id() const {
  // @@protoc_insertion_point(field_get:Vacation.id)
  return _internal_id();
}
inline void Vacation::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Vacation.id)
}
inline ::int32_t Vacation::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void Vacation::_internal_set_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// int32 empId = 2;
inline void Vacation::clear_empid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.empid_ = 0;
}
inline ::int32_t Vacation::empid() const {
  // @@protoc_insertion_point(field_get:Vacation.empId)
  return _internal_empid();
}
inline void Vacation::set_empid(::int32_t value) {
  _internal_set_empid(value);
  // @@protoc_insertion_point(field_set:Vacation.empId)
}
inline ::int32_t Vacation::_internal_empid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.empid_;
}
inline void Vacation::_internal_set_empid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.empid_ = value;
}

// string startDate = 3;
inline void Vacation::clear_startdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.startdate_.ClearToEmpty();
}
inline const std::string& Vacation::startdate() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Vacation.startDate)
  return _internal_startdate();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Vacation::set_startdate(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.startdate_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Vacation.startDate)
}
inline std::string* Vacation::mutable_startdate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_startdate();
  // @@protoc_insertion_point(field_mutable:Vacation.startDate)
  return _s;
}
inline const std::string& Vacation::_internal_startdate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.startdate_.Get();
}
inline void Vacation::_internal_set_startdate(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.startdate_.Set(value, GetArena());
}
inline std::string* Vacation::_internal_mutable_startdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.startdate_.Mutable( GetArena());
}
inline std::string* Vacation::release_startdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Vacation.startDate)
  return _impl_.startdate_.Release();
}
inline void Vacation::set_allocated_startdate(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.startdate_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.startdate_.IsDefault()) {
          _impl_.startdate_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Vacation.startDate)
}

// string endDate = 4;
inline void Vacation::clear_enddate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enddate_.ClearToEmpty();
}
inline const std::string& Vacation::enddate() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Vacation.endDate)
  return _internal_enddate();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Vacation::set_enddate(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enddate_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Vacation.endDate)
}
inline std::string* Vacation::mutable_enddate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_enddate();
  // @@protoc_insertion_point(field_mutable:Vacation.endDate)
  return _s;
}
inline const std::string& Vacation::_internal_enddate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enddate_.Get();
}
inline void Vacation::_internal_set_enddate(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enddate_.Set(value, GetArena());
}
inline std::string* Vacation::_internal_mutable_enddate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.enddate_.Mutable( GetArena());
}
inline std::string* Vacation::release_enddate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Vacation.endDate)
  return _impl_.enddate_.Release();
}
inline void Vacation::set_allocated_enddate(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enddate_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.enddate_.IsDefault()) {
          _impl_.enddate_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Vacation.endDate)
}

// int32 daysCount = 5;
inline void Vacation::clear_dayscount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dayscount_ = 0;
}
inline ::int32_t Vacation::dayscount() const {
  // @@protoc_insertion_point(field_get:Vacation.daysCount)
  return _internal_dayscount();
}
inline void Vacation::set_dayscount(::int32_t value) {
  _internal_set_dayscount(value);
  // @@protoc_insertion_point(field_set:Vacation.daysCount)
}
inline ::int32_t Vacation::_internal_dayscount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dayscount_;
}
inline void Vacation::_internal_set_dayscount(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dayscount_ = value;
}

// -------------------------------------------------------------------

// Employee

// int32 id = 1;
inline void Employee::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0;
}
inline ::int32_t Employee::id() const {
  // @@protoc_insertion_point(field_get:Employee.id)
  return _internal_id();
}
inline void Employee::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Employee.id)
}
inline ::int32_t Employee::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void Employee::_internal_set_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// string firstName = 2;
inline void Employee::clear_firstname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.firstname_.ClearToEmpty();
}
inline const std::string& Employee::firstname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Employee.firstName)
  return _internal_firstname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Employee::set_firstname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.firstname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Employee.firstName)
}
inline std::string* Employee::mutable_firstname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_firstname();
  // @@protoc_insertion_point(field_mutable:Employee.firstName)
  return _s;
}
inline const std::string& Employee::_internal_firstname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.firstname_.Get();
}
inline void Employee::_internal_set_firstname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.firstname_.Set(value, GetArena());
}
inline std::string* Employee::_internal_mutable_firstname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.firstname_.Mutable( GetArena());
}
inline std::string* Employee::release_firstname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Employee.firstName)
  return _impl_.firstname_.Release();
}
inline void Employee::set_allocated_firstname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.firstname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.firstname_.IsDefault()) {
          _impl_.firstname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Employee.firstName)
}

// string lastName = 3;
inline void Employee::clear_lastname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastname_.ClearToEmpty();
}
inline const std::string& Employee::lastname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Employee.lastName)
  return _internal_lastname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Employee::set_lastname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Employee.lastName)
}
inline std::string* Employee::mutable_lastname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_lastname();
  // @@protoc_insertion_point(field_mutable:Employee.lastName)
  return _s;
}
inline const std::string& Employee::_internal_lastname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lastname_.Get();
}
inline void Employee::_internal_set_lastname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastname_.Set(value, GetArena());
}
inline std::string* Employee::_internal_mutable_lastname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.lastname_.Mutable( GetArena());
}
inline std::string* Employee::release_lastname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Employee.lastName)
  return _impl_.lastname_.Release();
}
inline void Employee::set_allocated_lastname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.lastname_.IsDefault()) {
          _impl_.lastname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Employee.lastName)
}

// string patronymic = 4;
inline void Employee::clear_patronymic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.patronymic_.ClearToEmpty();
}
inline const std::string& Employee::patronymic() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Employee.patronymic)
  return _internal_patronymic();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Employee::set_patronymic(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.patronymic_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Employee.patronymic)
}
inline std::string* Employee::mutable_patronymic() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_patronymic();
  // @@protoc_insertion_point(field_mutable:Employee.patronymic)
  return _s;
}
inline const std::string& Employee::_internal_patronymic() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.patronymic_.Get();
}
inline void Employee::_internal_set_patronymic(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.patronymic_.Set(value, GetArena());
}
inline std::string* Employee::_internal_mutable_patronymic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.patronymic_.Mutable( GetArena());
}
inline std::string* Employee::release_patronymic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Employee.patronymic)
  return _impl_.patronymic_.Release();
}
inline void Employee::set_allocated_patronymic(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.patronymic_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.patronymic_.IsDefault()) {
          _impl_.patronymic_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Employee.patronymic)
}

// repeated .Vacation vacations = 5;
inline int Employee::_internal_vacations_size() const {
  return _internal_vacations().size();
}
inline int Employee::vacations_size() const {
  return _internal_vacations_size();
}
inline void Employee::clear_vacations() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vacations_.Clear();
}
inline ::Vacation* Employee::mutable_vacations(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Employee.vacations)
  return _internal_mutable_vacations()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Vacation>* Employee::mutable_vacations()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Employee.vacations)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_vacations();
}
inline const ::Vacation& Employee::vacations(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Employee.vacations)
  return _internal_vacations().Get(index);
}
inline ::Vacation* Employee::add_vacations() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Vacation* _add = _internal_mutable_vacations()->Add();
  // @@protoc_insertion_point(field_add:Employee.vacations)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Vacation>& Employee::vacations() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Employee.vacations)
  return _internal_vacations();
}
inline const ::google::protobuf::RepeatedPtrField<::Vacation>&
Employee::_internal_vacations() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vacations_;
}
inline ::google::protobuf::RepeatedPtrField<::Vacation>*
Employee::_internal_mutable_vacations() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.vacations_;
}

// -------------------------------------------------------------------

// GetAllEmployeersRequest

// -------------------------------------------------------------------

// GetAllEmployeersResponse

// repeated .Employee employees = 1;
inline int GetAllEmployeersResponse::_internal_employees_size() const {
  return _internal_employees().size();
}
inline int GetAllEmployeersResponse::employees_size() const {
  return _internal_employees_size();
}
inline void GetAllEmployeersResponse::clear_employees() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.employees_.Clear();
}
inline ::Employee* GetAllEmployeersResponse::mutable_employees(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:GetAllEmployeersResponse.employees)
  return _internal_mutable_employees()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Employee>* GetAllEmployeersResponse::mutable_employees()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:GetAllEmployeersResponse.employees)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_employees();
}
inline const ::Employee& GetAllEmployeersResponse::employees(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:GetAllEmployeersResponse.employees)
  return _internal_employees().Get(index);
}
inline ::Employee* GetAllEmployeersResponse::add_employees() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Employee* _add = _internal_mutable_employees()->Add();
  // @@protoc_insertion_point(field_add:GetAllEmployeersResponse.employees)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Employee>& GetAllEmployeersResponse::employees() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:GetAllEmployeersResponse.employees)
  return _internal_employees();
}
inline const ::google::protobuf::RepeatedPtrField<::Employee>&
GetAllEmployeersResponse::_internal_employees() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.employees_;
}
inline ::google::protobuf::RepeatedPtrField<::Employee>*
GetAllEmployeersResponse::_internal_mutable_employees() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.employees_;
}

// -------------------------------------------------------------------

// GetVacationsByEmployeeRequest

// int32 empId = 1;
inline void GetVacationsByEmployeeRequest::clear_empid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.empid_ = 0;
}
inline ::int32_t GetVacationsByEmployeeRequest::empid() const {
  // @@protoc_insertion_point(field_get:GetVacationsByEmployeeRequest.empId)
  return _internal_empid();
}
inline void GetVacationsByEmployeeRequest::set_empid(::int32_t value) {
  _internal_set_empid(value);
  // @@protoc_insertion_point(field_set:GetVacationsByEmployeeRequest.empId)
}
inline ::int32_t GetVacationsByEmployeeRequest::_internal_empid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.empid_;
}
inline void GetVacationsByEmployeeRequest::_internal_set_empid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.empid_ = value;
}

// -------------------------------------------------------------------

// GetVacationsByEmployeeResponse

// repeated .Vacation vacations = 1;
inline int GetVacationsByEmployeeResponse::_internal_vacations_size() const {
  return _internal_vacations().size();
}
inline int GetVacationsByEmployeeResponse::vacations_size() const {
  return _internal_vacations_size();
}
inline void GetVacationsByEmployeeResponse::clear_vacations() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vacations_.Clear();
}
inline ::Vacation* GetVacationsByEmployeeResponse::mutable_vacations(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:GetVacationsByEmployeeResponse.vacations)
  return _internal_mutable_vacations()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Vacation>* GetVacationsByEmployeeResponse::mutable_vacations()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:GetVacationsByEmployeeResponse.vacations)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_vacations();
}
inline const ::Vacation& GetVacationsByEmployeeResponse::vacations(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:GetVacationsByEmployeeResponse.vacations)
  return _internal_vacations().Get(index);
}
inline ::Vacation* GetVacationsByEmployeeResponse::add_vacations() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Vacation* _add = _internal_mutable_vacations()->Add();
  // @@protoc_insertion_point(field_add:GetVacationsByEmployeeResponse.vacations)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Vacation>& GetVacationsByEmployeeResponse::vacations() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:GetVacationsByEmployeeResponse.vacations)
  return _internal_vacations();
}
inline const ::google::protobuf::RepeatedPtrField<::Vacation>&
GetVacationsByEmployeeResponse::_internal_vacations() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vacations_;
}
inline ::google::protobuf::RepeatedPtrField<::Vacation>*
GetVacationsByEmployeeResponse::_internal_mutable_vacations() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.vacations_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_vacation_5fprotocols_2eproto_2epb_2eh
